<?php
declare(strict_types=1);

class Collision16Bit extends AbstractCollision
{
    /**
     * If we haven't found anything in 2^16 steps, this seed wasn't biased
     *
     * @return int
     */
    protected function getMaxSteps(): int
    {
        return 1 << 16;
    }

    /**
     * Generate a biased keypair.
     *
     * @return array
     * @throws SodiumException
     */
    public function generateKeypair(): array
    {
        // We only set the first 16 bits
        $sk = random_bytes(2) . str_repeat("\x00", 30);
        $pk = sodium_crypto_scalarmult_ristretto255_base(
            sodium_crypto_generichash($sk)
        );
        return [$sk, $pk];
    }

    /**
     * Deliberately introduce bias on this secret key
     *
     * @param string $seed
     * @return string
     * @throws Exception
     */
    public function uniformToBiased(string $seed): string
    {
        if (strlen($seed) !== 32) {
            throw new Exception('Input must be 32 bytes; ' . strlen($seed) . ' given.');
        }
        return $seed[0] . $seed[1] . str_repeat("\x00", 30);
    }
}
